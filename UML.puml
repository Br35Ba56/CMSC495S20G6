@startuml
set namespaceSeparator ::

class "pantry::utils::fade_route.dart::FadePageRoute<T>" {
  +Duration transitionDuration
  +Widget buildTransitions()
}

"flutter::src::material::page.dart::MaterialPageRoute<T>" <|-- "pantry::utils::fade_route.dart::FadePageRoute<T>"

class "pantry::models::upc_base_response.dart::BaseResponse" {
  +String code
  +int total
  +int offset
  +List<Items> items
  +Map toJson()
}

class "pantry::models::upc_base_response.dart::Items" {
  +String ean
  +String title
  +String description
  +String upc
  +String brand
  +String model
  +String color
  +String size
  +String dimension
  +String weight
  +String currency
  +int lowestRecordedPrice
  +double highestRecordedPrice
  +List<String> images
  +List<Offer> offers
  +String asin
  +String elid
  +Map toJson()
}

class "pantry::models::upc_base_response.dart::Offer" {
  +String merchant
  +String domain
  +String title
  +String currency
  +String listPrice
  +double price
  +String shipping
  +String link
  +int updatedT
  +Map toJson()
}

class "pantry::models::item.dart::Item" {
  +String name
  +String acquisition_date
  +String quantity_with_unit
  +String expiration_date
  +int id
  +Map toJson()
  +String toString()
}

class "pantry::screens::scan_screen.dart::Connections" {
  {static} +TextEditingController itemController
  {static} +TextEditingController unitController
  {static} +TextEditingController expirationController
  {static} +TextEditingController acquisitionController
  {static} +TextEditingController searchController
}

"pantry::screens::scan_screen.dart::Connections" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"

class "pantry::screens::scan_screen.dart::Scan" {
  +ScanState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pantry::screens::scan_screen.dart::Scan"

class "pantry::screens::scan_screen.dart::ScanState" {
  +String barcode
  +Client client
  +BaseResponse baseResponse
  +DateFormat formatter
  +BuildContext context
  +void initState()
  -dynamic _itemController()
  -dynamic _unitController()
  -dynamic _acquisitionController()
  -dynamic _expirationController()
  +Widget build()
  +Widget pantryInfoInputsWidget()
  +void clear()
  +Future scan()
}

"pantry::screens::scan_screen.dart::ScanState" o-- "http::src::client.dart::Client"
"pantry::screens::scan_screen.dart::ScanState" o-- "pantry::models::upc_base_response.dart::BaseResponse"
"pantry::screens::scan_screen.dart::ScanState" o-- "intl::intl.dart::DateFormat"
"pantry::screens::scan_screen.dart::ScanState" o-- "flutter::src::widgets::framework.dart::BuildContext"
"flutter::src::widgets::framework.dart::State<T>" <|-- "pantry::screens::scan_screen.dart::ScanState"

class "pantry::screens::view_item.dart::ViewItem" {
  +Item item
  +Widget build()
}

"pantry::screens::view_item.dart::ViewItem" o-- "pantry::models::item.dart::Item"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "pantry::screens::view_item.dart::ViewItem"

class "pantry::screens::login_screen.dart::LoginScreen" {
  +LoginScreenState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pantry::screens::login_screen.dart::LoginScreen"

class "pantry::screens::login_screen.dart::LoginScreenState" {
  {static} +String routeName
  +Duration loginTime
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "pantry::screens::login_screen.dart::LoginScreenState"

class "pantry::screens::search_screen.dart::Search" {
  +SearchState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pantry::screens::search_screen.dart::Search"

class "pantry::screens::search_screen.dart::SearchState" {
  +List<Item> foundItems
  +BuildContext context
  +void initState()
  -dynamic _searchController()
  +Widget build()
  +Widget pantrySearchWidget()
}

"pantry::screens::search_screen.dart::SearchState" o-- "flutter::src::widgets::framework.dart::BuildContext"
"flutter::src::widgets::framework.dart::State<T>" <|-- "pantry::screens::search_screen.dart::SearchState"

class "pantry::screens::search_screen.dart::SearchDisplay" {
  +SearchDisplayState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pantry::screens::search_screen.dart::SearchDisplay"

class "pantry::screens::search_screen.dart::SearchDisplayState" {
  +Future<Item> inventory
  +bool isLoading
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "pantry::screens::search_screen.dart::SearchDisplayState"

class "pantry::screens::search_screen.dart::SearchResults" {
  +List<Item> inventory
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "pantry::screens::search_screen.dart::SearchResults"

class "pantry::screens::home_screen.dart::HomeScreen" {
  +HomeScreenState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pantry::screens::home_screen.dart::HomeScreen"

class "pantry::screens::home_screen.dart::HomeScreenState" {
  +int selectedIndex
  +List<StatefulWidget> widgetOptions
  +Widget build()
  +void onItemTapped()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "pantry::screens::home_screen.dart::HomeScreenState"

class "pantry::screens::home_screen.dart::PantryList" {
  +PantryListState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "pantry::screens::home_screen.dart::PantryList"

class "pantry::screens::home_screen.dart::PantryListState" {
  +Future<Item> inventory
  +bool isLoading
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "pantry::screens::home_screen.dart::PantryListState"

class "pantry::screens::home_screen.dart::InventoryList" {
  +List<Item> inventory
  +Widget build()
  +Color colorCode()
  +List sortInventory()
  +List searchByName()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "pantry::screens::home_screen.dart::InventoryList"

class "pantry::main.dart::MyApp" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "pantry::main.dart::MyApp"


@enduml